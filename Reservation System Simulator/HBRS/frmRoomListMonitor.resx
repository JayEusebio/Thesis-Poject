<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMyMTRTLh0Qiy4dEIsuHRCLLh0Qiy4dEIsuHRCLLh0Qiy4dEIsuHRCLLh0Qiy4dEIsuH
        RCLLh0Qiy4dEIsuHRCLLh0Qiy4dEIsuHRCLLh0Qiy4dEIsuHRCLLh0Qiy4dEIsuHRCLLh0Qiy4dEIsyM
        TRQAAAAAAAAAAAAAAAAAAAAAzJRWqdSgafHXpnLu16Zy7temcu7XpnLu16Zy7temcu7XpnLu16Zy7tem
        cu7XpnLu16Zy7temcu7XpnLu16Zy7temcu7XpnLu16Zy7temcu7XpnLu16Zy7temcu7XpnLu16Zy7tem
        cu7UoGnxzJRWqQAAAAAAAAAAAAAAAAAAAADNlVqt89vA//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//PbwP/NlVqtAAAAAAAAAAAAAAAAAAAAAM2VWq3z28D//vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N//89vA/82VWq0AAAAAAAAAAAAAAAAAAAAAzZVarfPbwP/+8N///vDf//7w
        3//Sm2P/0ppg/86TVv/oxqL//vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf/+jG
        ov/Ok1b/0ppg/9KbY//+8N///vDf//7w3//z28D/zZVarQAAAAAAAAAAAAAAAAAAAADNlVqt89vA//7w
        3//+8N///vDf/9KaYv/+3Lb/6LqJ/+jGov/+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N//6Mai/+i6if/+3Lb/0ppi//7w3//+8N///vDf//PbwP/NlVqtAAAAAAAAAAAAAAAAAAAAAM2V
        Wq3z28D//vDf//7w3//+8N//zpNW/92pcv/VnWP/1aJr/92wgP/dsID/3bCA/92wgP/dsID/3bCA/92w
        gP/dsID/3bCA/92wgP/Vomv/1Z1j/92pcv/Ok1b//vDf//7w3//+8N//89vA/82VWq0AAAAAAAAAAAAA
        AAAAAAAAzZVarfPbwP/+8N///vDf//7w3//MkFH/8r6I//K+iP/yvoj/8r6I//K+iP/yvoj/8r6I//K+
        iP/yvoj/8r6I//K+iP/yvoj/8r6I//K+iP/yvoj/8r6I/8yQUf/+8N///vDf//7w3//z28D/zZVarQAA
        AAAAAAAAAAAAAAAAAADNlVqt89vA//7w3//+8N///vDf/82SVP/9zJj//cyY//3MmP/9zJj//cyY//3M
        mP/9zJj//cyY//3MmP/9zJj//cyY//3MmP/9zJj//cyY//3MmP/9zJj/zZJU//7w3//+8N///vDf//Pb
        wP/NlVqtAAAAAAAAAAAAAAAAAAAAAM2VWq3z28D//vDf//7w3//+8N//0ppg//3MmP/9zJj//cyY//3M
        mP/9zJj//cyY//3MmP/9zJj//cyY//3MmP/9zJj//cyY//3MmP/9zJj//cyY//3MmP/SmmD//vDf//7w
        3//+8N//89vA/82VWq0AAAAAAAAAAAAAAAAAAAAAzZVarfPbwP/+8N///vDf//7w3//SmmD//cyY//3M
        mP/9zJj//cyY//3MmP/9zJj//cyY//3MmP/9zJj//cyY//3MmP/9zJj//cyY//3MmP/9zJj//cyY/9Ka
        YP/+8N///vDf//7w3//z28D/zZVarQAAAAAAAAAAAAAAAAAAAADNlVqt89vA//7w3//+8N///vDf/9Ka
        YP/9zJj//cyY/+Oscf/Sllf/0pZX/9KWV//Sllf/0pZX/9KWV//Sllf/0pZX/9KWV//Sllf/46xx//3M
        mP/9zJj/0ppg//7w3//+8N///vDf//PbwP/NlVqtAAAAAAAAAAAAAAAAAAAAAM2VWq3z28D//vDf//7w
        3//+8N//0ppg//3MmP/9zJj/3KRo//K+iP/9zJj//cyY//3MmP/9zJj//cyY//3MmP/9zJj//cyY//K+
        iP/cpGj//cyY//3MmP/SmmD//vDf//7w3//+8N//89vA/82VWq0AAAAAAAAAAAAAAAAAAAAAzZVarfPb
        wP/+8N///vDf//7w3//VoGn/+MaR//3MmP/XnF//9sSN//3MmP/9zJj//cyY//3MmP/9zJj//cyY//3M
        mP/9zJj/9sON/9idYf/9zJj/+MaQ/9Whav/+8N///vDf//7w3//z28D/zZVarQAAAAAAAAAAAAAAAAAA
        AADNlVqt89vA//7w3//+8N///vDf/+7Ss//Rllr/1Jlb/9uhZv/9zJj//cyY//3MmP/9zJj//cyY//3M
        mP/9zJj//cyY//3MmP/9zJj/2qBk/9SZW//Rlln/79Kz//7w3//+8N///vDf//PbwP/NlVqtAAAAAAAA
        AAAAAAAAAAAAAM2VWq3z28D//vDf//7w3//+8N///vDf//HXuv/ao2r//cyY//3MmP/9zJj//cyY//3M
        mP/9zJj//cyY//3MmP/9zJj//cyY//3MmP/9zJj/2qJq//HXuv/+8N///vDf//7w3//+8N//89vA/82V
        Wq0AAAAAAAAAAAAAAAAAAAAAzZVarfPbwP/+8N///vDf//7w3//+8N//89zB/9ymbf/9zJj//cyY//3M
        mP/9zJj//cyY//3MmP/9zJj//cyY//3MmP/9zJj//cyY//3MmP/cpm3/89zB//7w3//+8N///vDf//7w
        3//z28D/zZVarQAAAAAAAAAAv4BADNWAVQbNlVqt89vA//7w3//+8N///vDf//7w3//66dX/1Z1j//3M
        mP/9zJj//cyY//3MmP/9zJj//cyY//3MmP/9zJj//cyY//3MmP/9zJj//cyY/9WcYv/66tX//vDf//7w
        3//+8N///vDf//PbwP/NlVqttpJJB7+AQAzIh0YzyoxN2MyTVr3z28D//vDf//7w3//+8N///vDf//7w
        3//crHr/6LJ6//3MmP/9zJj//cyY//3MmP/9zJj//cyY//3MmP/9zJj//cyY//3MmP/osXn/3K18//7w
        3//+8N///vDf//7w3//+8N//89vA/8ySVb7KjE3YyIdGM8iHRjPUmFrx1JdZ+NelcP/55tH//vDf//7w
        3//+8N///vDf//zt2v/fsoT/05pf/9KYXP/SmFz/0phc/9KYXP/SmFz/0phc/9KYXP/SmFz/05pf/9+z
        hf/87Nr//vDf//7w3//+8N///vDf//nm0f/XpHD/1JdZ+NSYWvHIh0YzyIdGM9mgZOv9zJf/6bN7/9GX
        W//pyKb//vDe//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3v/pyaX/0Zdb/+mze//9zJf/2aBk68iHRjPGh0kx0JRV8PjG
        kf/9zJj/+siU/9+pb//UnWT/89zB//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//z28D/1J1k/9+pcP/6yJT//cyY//jGkf/RlFXvxodJMf//
        AAHLjEtmzY9Q6+iyev39zJf//cyY//G9hv/Tml7/4rqQ//zs2f/+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//87Nn/4rqP/9OaXv/xvYb//cyY//3Ml//osnr9zY9Q68uM
        S2b//wABAAAAAAAAAADJhkMTy4xNstOYWu71woz//cyY//zMl//mr3f/0phe/+3Qr//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//+8N//7dCv/9KYXv/mr3f//MyX//3MmP/1woz/05dZ7suM
        TbLJhkMTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyIlJOMuNTtzgqG31+8mV//3MmP/4xpD/2aFm/9qp
        dP/45c///vDf//7w3//+8N///vDf//7w3//+8N//+OXP/9qpdf/ao2r/+MaQ//3MmP/7yZX/4Kht9cuN
        TtzIiUk4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqqpVA8yNTXfOkFHs7Ld+/v3M
        mP/9zJj/77qD/9KYXf/mwZr//e7c//7w3//+8N///e7c/+bBmv/SmF3/77qD//3MmP/9zJj/7Ld+/s6Q
        UezMi013qqpVAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMiF
        QxfMjlC115xe7vfFj//9zJj/+8qW/+Krcv/Tm2H/8di7//HYu//Tm2L/4qty//zKlv/9zJj/9sSN/9WZ
        W/DMjlC1xYtGFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADHi0o3zY9O2uCnbfT7ypb//cyY//jFkP/Zomf/2qJp//jGkf/9zJj/+8qW/+Cm
        bfTNj07axolHNgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADVgFUGy4xOis6SU+zwvIX+/cyY//3MmP/9zJj//cyY//C8
        hf7OklPsy4xOitWAVQYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxYxKH8yOT8TXnmDu+MaR//jG
        kf/XnmDuzI5PxMWMSh8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMmL
        SULLjk/gy45P4MiJS0EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANWAVQbMmTMFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADgAAAAYAAAAGAAAABgAAAAcAAAAPgAAAH+AAAH/4A
        AH//AAD//8AD///gB///+B////5///////8=
</value>
  </data>
</root>